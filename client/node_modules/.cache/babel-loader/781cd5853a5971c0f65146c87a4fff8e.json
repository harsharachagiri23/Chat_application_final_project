{"ast":null,"code":"export function fetchSession() {\n  return fetch('/api/v1/session', {\n    method: 'GET'\n  }).catch(() => Promise.reject({\n    error: 'networkError'\n  })).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response.json().catch(error => Promise.reject({\n      error\n    })).then(err => Promise.reject(err));\n  });\n}\nexport function fetchLogout() {\n  return fetch('/api/v1/session', {\n    method: 'DELETE'\n  }).catch(() => Promise.reject({\n    error: 'networkError'\n  })).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response.json().catch(error => Promise.reject({\n      error\n    })).then(err => Promise.reject(err));\n  });\n}\nexport function fetchLogin(username) {\n  return fetch('/api/v1/session', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(() => Promise.reject({\n    error: 'networkError'\n  })).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response.json().catch(error => Promise.reject({\n      error\n    })).then(err => Promise.reject(err));\n  });\n}\nexport function fetchActiveUsers(room) {\n  return fetch(`/api/v1/users/${room}`, {\n    method: 'GET'\n  }).catch(() => Promise.reject({\n    error: 'networkError'\n  })).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response.json().catch(error => Promise.reject({\n      error\n    })).then(err => Promise.reject(err));\n  });\n}","map":{"version":3,"names":["fetchSession","fetch","method","catch","Promise","reject","error","then","response","ok","json","err","fetchLogout","fetchLogin","username","headers","Headers","body","JSON","stringify","fetchActiveUsers","room"],"sources":["/Users/harshavardhani/Documents/web_dev_tools/student-bos6250-harshaV0211/final/client/src/services.js"],"sourcesContent":["export function fetchSession() {\r\n    return fetch('/api/v1/session', {\r\n      method: 'GET',\r\n    })\r\n    .catch( () => Promise.reject({ error: 'networkError' }) )\r\n    .then( response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return response.json()\r\n      .catch( error => Promise.reject({ error }) )\r\n      .then( err => Promise.reject(err) );\r\n    });\r\n  }\r\n  \r\n  export function fetchLogout() {\r\n    return fetch('/api/v1/session', {\r\n      method: 'DELETE',\r\n    })\r\n    .catch( () => Promise.reject({ error: 'networkError' }) )\r\n    .then( response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return response.json()\r\n      .catch( error => Promise.reject({ error }) )\r\n      .then( err => Promise.reject(err) );\r\n    });\r\n  }\r\n  \r\n  export function fetchLogin(username) {\r\n    return fetch('/api/v1/session', {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'content-type': 'application/json'\r\n      }),\r\n      body: JSON.stringify({ username }),\r\n    })\r\n    .catch( () => Promise.reject({ error: 'networkError' }) )\r\n    .then( response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return response.json()\r\n      .catch( error => Promise.reject({ error }) )\r\n      .then( err => Promise.reject(err) );\r\n    });\r\n  }\r\n\r\nexport function fetchActiveUsers(room){\r\n    return fetch(`/api/v1/users/${room}`, {\r\n        method: 'GET',\r\n      })\r\n      .catch( () => Promise.reject({ error: 'networkError' }) )\r\n      .then( response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return response.json()\r\n        .catch( error => Promise.reject({ error }) )\r\n        .then( err => Promise.reject(err) );\r\n      });\r\n}"],"mappings":"AAAA,OAAO,SAASA,YAAT,GAAwB;EAC3B,OAAOC,KAAK,CAAC,iBAAD,EAAoB;IAC9BC,MAAM,EAAE;EADsB,CAApB,CAAL,CAGNC,KAHM,CAGC,MAAMC,OAAO,CAACC,MAAR,CAAe;IAAEC,KAAK,EAAE;EAAT,CAAf,CAHP,EAINC,IAJM,CAIAC,QAAQ,IAAI;IACjB,IAAIA,QAAQ,CAACC,EAAb,EAAiB;MACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;IACD;;IACD,OAAOF,QAAQ,CAACE,IAAT,GACNP,KADM,CACCG,KAAK,IAAIF,OAAO,CAACC,MAAR,CAAe;MAAEC;IAAF,CAAf,CADV,EAENC,IAFM,CAEAI,GAAG,IAAIP,OAAO,CAACC,MAAR,CAAeM,GAAf,CAFP,CAAP;EAGD,CAXM,CAAP;AAYD;AAED,OAAO,SAASC,WAAT,GAAuB;EAC5B,OAAOX,KAAK,CAAC,iBAAD,EAAoB;IAC9BC,MAAM,EAAE;EADsB,CAApB,CAAL,CAGNC,KAHM,CAGC,MAAMC,OAAO,CAACC,MAAR,CAAe;IAAEC,KAAK,EAAE;EAAT,CAAf,CAHP,EAINC,IAJM,CAIAC,QAAQ,IAAI;IACjB,IAAIA,QAAQ,CAACC,EAAb,EAAiB;MACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;IACD;;IACD,OAAOF,QAAQ,CAACE,IAAT,GACNP,KADM,CACCG,KAAK,IAAIF,OAAO,CAACC,MAAR,CAAe;MAAEC;IAAF,CAAf,CADV,EAENC,IAFM,CAEAI,GAAG,IAAIP,OAAO,CAACC,MAAR,CAAeM,GAAf,CAFP,CAAP;EAGD,CAXM,CAAP;AAYD;AAED,OAAO,SAASE,UAAT,CAAoBC,QAApB,EAA8B;EACnC,OAAOb,KAAK,CAAC,iBAAD,EAAoB;IAC9BC,MAAM,EAAE,MADsB;IAE9Ba,OAAO,EAAE,IAAIC,OAAJ,CAAY;MACnB,gBAAgB;IADG,CAAZ,CAFqB;IAK9BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEL;IAAF,CAAf;EALwB,CAApB,CAAL,CAONX,KAPM,CAOC,MAAMC,OAAO,CAACC,MAAR,CAAe;IAAEC,KAAK,EAAE;EAAT,CAAf,CAPP,EAQNC,IARM,CAQAC,QAAQ,IAAI;IACjB,IAAIA,QAAQ,CAACC,EAAb,EAAiB;MACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;IACD;;IACD,OAAOF,QAAQ,CAACE,IAAT,GACNP,KADM,CACCG,KAAK,IAAIF,OAAO,CAACC,MAAR,CAAe;MAAEC;IAAF,CAAf,CADV,EAENC,IAFM,CAEAI,GAAG,IAAIP,OAAO,CAACC,MAAR,CAAeM,GAAf,CAFP,CAAP;EAGD,CAfM,CAAP;AAgBD;AAEH,OAAO,SAASS,gBAAT,CAA0BC,IAA1B,EAA+B;EAClC,OAAOpB,KAAK,CAAE,iBAAgBoB,IAAK,EAAvB,EAA0B;IAClCnB,MAAM,EAAE;EAD0B,CAA1B,CAAL,CAGJC,KAHI,CAGG,MAAMC,OAAO,CAACC,MAAR,CAAe;IAAEC,KAAK,EAAE;EAAT,CAAf,CAHT,EAIJC,IAJI,CAIEC,QAAQ,IAAI;IACjB,IAAIA,QAAQ,CAACC,EAAb,EAAiB;MACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;IACD;;IACD,OAAOF,QAAQ,CAACE,IAAT,GACNP,KADM,CACCG,KAAK,IAAIF,OAAO,CAACC,MAAR,CAAe;MAAEC;IAAF,CAAf,CADV,EAENC,IAFM,CAEAI,GAAG,IAAIP,OAAO,CAACC,MAAR,CAAeM,GAAf,CAFP,CAAP;EAGD,CAXI,CAAP;AAYH"},"metadata":{},"sourceType":"module"}